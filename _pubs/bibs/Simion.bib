inproceedings{03Zavaleta25,
author = {Ramirez Osorio, Valeria and Zavaleta Bernuy, Angela and Simion, Bogdan and Liut, Michael},
title = {Understanding the Impact of Using Generative AI Tools in a Database Course},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701785},
doi = {10.1145/3641554.3701785},
abstract = {Generative Artificial Intelligence (GenAI) and Large Language Models (LLMs) have led to changes in educational practices by creating opportunities for personalized learning and immediate support. Computer science student perceptions and behaviors towards GenAI tools have been studied, but the effects of such tools on student learning have yet to be determined conclusively. We investigate the impact of GenAI tools on computing students' performance in a database course and aim to understand why students use GenAI tools in assignments. Our mixed-methods study (N=226) asked students to self-report whether they used a GenAI tool to complete a part of an assignment and why. Our results reveal that students utilizing GenAI tools performed better on the assignment part in which LLMs were permitted but did worse in other parts of the assignment and in the course overall. Also, those who did not use GenAI tools viewed more discussion board posts and participated more than those who used ChatGPT. This suggests that using GenAI tools may not lead to better skill development or mental models, at least not if the use of such tools is unsupervised, and that engagement with official course help supports may be affected. Further, our thematic analysis of reasons for using or not using GenAI tools, helps understand why students are drawn to these tools. Shedding light into such aspects empowers instructors to be proactive in how to encourage, supervise, and handle the use or integration of GenAI into courses, fostering good learning habits.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {959–965},
numpages = {7},
keywords = {computing education, databases, generative artificial intelligence, large language models, student behavior, student performance},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{07Engineer24,
author = {Rutwa Engineer and Naaz Sibia and Michael Kaler and Bogdan Simion and Lisa Zhang},
title = {Early Computer Science Students' Perspectives Towards The Importance Of Writing},
year = {2024},
isbn = {9798400706004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649217.3653576},
doi = {10.1145/3649217.3653576},
abstract = {Faculty and industry practitioners recognize written communication to be important in computer science, but it can be challenging to convince students of the same. As student perceptions are molded early in a program of study, we focus on early-year CS students to understand their perceptions towards the importance of writing in CS, with the goal of framing discipline-specific writing pedagogy. We qualitatively analyze responses from first and second-year CS students in a survey about the role of writing in their field. The responses reveal that a majority view writing as an indispensable skill. Specifically, students recognize it as a fundamental skill, applicable across diverse contexts, and uniquely relevant in CS compared to other fields. We identified 4 perceptions that they hold which are helpful to their development as writers: that writing is a useful fundamental skill, which is useful for achieving various goals in a variety of contexts, and that writing in CS is different than in other fields. However, 20\% of responses include reasons why writing is not important in CS, and we identify 4 perceptions harmful to students' development as writers: that writing skills can be avoided, are defined narrowly, do not need to be developed beyond a baseline, and come at the cost of computing skills. We believe that there is an opportunity to align discipline-specific writing instruction with these useful and harmful perceptions.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
pages = {332–338},
numpages = {7},
keywords = {computer science education, curriculum, technical writing skills, wac, wid, written communication, wtl},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{01Zavaleta23,
author = {Angela Zavaleta Bernuy and Runlong Ye and Elexandra Tran and Naaz Sibia and Abhijoy Mandal and Hammad Shaikh and Bogdan Simion and Michael Liut and Andrew Petersen and Joseph Jay Williams},
title = {Do Students Read Instructor Emails? A Case Study of Intervention Email Open Rates},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631813},
doi = {10.1145/3631802.3631813},
abstract = {Email is an important mode of communication because it scales to the largest computing courses and is institutionally supported. Furthermore, regular email communication from instructors has been shown to help set student expectations and encourage participation. As a result, effective email can contribute to emotional engagement, which has been linked to improvements in performance and retention, the latter being a persistent problem in computer science. However, we lack a clear picture of how computing students interact with emails and whether their use aligns with instructors’ expectations. This paper addresses this gap by presenting data on how often CS1 students open instructor emails. We present email engagement data throughout the term for a particular type of email that prompts students to plan to start their homework. Contrary to instructors’ expectations, the rate at which students open emails of this kind does not change significantly over the term. Many students who engage with the emails do so consistently, even after repeated emails throughout the term. The patterns we found illustrate the value of collecting this type of data and informing instructors and researchers about who reads these messages and how often they actually reach students.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {13},
numpages = {12},
keywords = {email engagement, email open rates, instructor communication},
location = {<conf-loc>, <city>Koli</city>, <country>Finland</country>, </conf-loc>},
series = {Koli Calling '23}
}

inproceedings{08Steinhorst23,
author = {Phil Steinhorst and Andrew Petersen and Bogdan Simion and Jan Vahrenhold},
title = {Exploring Barriers in Productive Failure},
year = {2023},
isbn = {9781450399760},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568813.3600111},
doi = {10.1145/3568813.3600111},
abstract = {Motivation and Objectives. Productive Failure is a problem-based learning technique where students attempt to solve a problem before receiving instruction in the topic. By design, students may not find a satisfying solution. Prior studies of Productive Failure in STEM contexts have been conducted in secondary or introductory college settings. Focusing primarily on exploring appropriate analysis and modeling techniques, these studies showed that a Productive Failure approach can lead to greater conceptual knowledge acquisition and transfer capabilities compared to »traditional«Direct Instruction techniques. In this study, we build on these studies along two dimensions: First, we report on the design and evaluation of a Productive Failure intervention in a more advanced undergraduate class: third-year Operating Systems. Second, our intervention targeted a more advanced skill: applying synchronization primitives, rather than selecting appropriate modeling and analysis techniques. Methods. We ran a quasi-experimental study in an undergraduate Operating Systems course to compare the effects of Productive Failure (PF) with Direct Instruction (DI) on students’ learning. To ensure fidelity of implementation as well as to explore different modes of instruction, we ran a pilot study in a remote learning environment. The final study was conducted in an in-person classroom environment. We collected and analyzed both qualitative and quantitative data to gather insights into the students’ problem-solving process and learning outcomes. Results. In line with previous studies, our study did not provide empirical evidence that there was any statistically significant difference with respect to reflection or short-term transfer. While we were able to verify that students in the Productive Failure condition explored a wider spectrum of solution approaches, we could not reliably detect different communication patterns across the conditions. Finally and unlike previous studies, our study was unable to detect longer-term difference in transfer capabilities. Discussion. We failed to observe several of the advantages of Productive Failure over Direct Instruction seen in prior work in other contexts. However, we note several differences in context relative to those earlier studies, including both the complexity of the topics covered and the type of intended learning outcomes. Consequently, our results do not directly contradict earlier findings. Still, they leave room for interpretation and call for further investigation of this instructional approach in more advanced computer science classes.},
booktitle = {Proceedings of the 2023 ACM Conference on International Computing Education Research V.1},
pages = {284–297},
numpages = {14},
keywords = {Operating Systems, Problem-based Learning, Productive Failure},
location = {Chicago, IL, USA},
series = {ICER '23 V1}
}

  
inproceedings{03Zhang23,
author = {Zhang, Lisa and Simion, Bogdan and Kaler, Michael and Liaqat, Amna and Dick, Daniel and Bergen, Andi and Miljanovic, Michael and Petersen, Andrew},
title = {Embedding and Scaling Writing Instruction Across First- and Second-Year Computer Science Courses},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569729},
doi = {10.1145/3545945.3569729},
abstract = {Writing skills are often considered unimportant by computer science students and were under-emphasized in our curriculum. We describe our experience embedding CS-specific writing instruction at scale in most of our large, core, first- and second-year Computer Science courses, each with 300-800+ students. Our approach is to collaborate with a writing specialist and a community of course instructors, centralize the management of writing teaching assistants, and introduce a variety of relevant genres and contexts to help students develop and apply writing skills. We outline the institutional support and organization crucial to a project of this scale. In addition, we report on a survey collecting student perception of the writing instruction/assessment. We reflect on quantitative and qualitative evidence of success, as well as the challenges that we faced. We believe that many of these challenges will be common across institutions, parti
cularly those with large courses.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {610–616},
numpages = {7},
keywords = {wid, wac, wtl, written communication, cs education},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{03Simion22-2,
author = {Rehmat Munir and Francesco Strafforello and Niveditha Kani and Michael Kaler and Bogdan Simion and Lisa Zhang},
title = {Exploring Common Writing Issues in Upper-Year Computer Science},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499335},
doi = {10.1145/3478431.3499335},
abstract = {This study analyzes common issues in the writing of our upper-year, undergraduate computer science students in timed (e.g. tests) and untimed (e.g. longer assignment reports) scenarios. Our goal is to identify writing issues that should be addressed earlier in the CS curriculum. In collaboration with a writing specialist, we develop and fine-tune a rubric with Grammar, Conciseness, Clarity, Organization, Structure, and Formality as the main categories.  We find, in our writing samples, that grammatical issues (such as punctuation errors or run-on sentences) are common even in a setting where students have ample time to proofread. Other common issues include unclear pronoun antecedents, lacking topic sentences, and other structural and organizational issues. Moreover, we correlate the presence of these issues with the students' grades. We do not find statistically significant correlations between writing skill and grades, and the weak correlations we find depend heavily on the writing context.  We hope that our rubric items and findings are useful for instructors in targeting writing skills that warrant development.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education},
pages = {161–167},
numpages = {7},
keywords = {written communication, cs education},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{03Simion22-1,
author = {Andrew Jiang and Bogdan Simion},
title = {Help Supports during Online Delivery: Student Perception and Lessons Learnt from an Online CS2},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499369},
doi = {10.1145/3478431.3499369},
abstract = {With the shift to online delivery, instructors looked to provide comparable help supports for students, especially for first-year learners who need timely assistance the most. Our work aims to understand student help seeking behavior and perception of getting help in an online CS2 course.First, we analyze how much students ask for help and perceive to get help in several help support components: lectures, labs, instructor office hours, and on the discussion board. We find that while students take advantage of all help resources, the discussion board is predominantly the main source of help, while instructor office hours run into scalability problems. Secondly, we explore whether asking for and getting help are correlated with grades and find an inverted-U quadratic relationship in both cases. This indicates that low-performing and high-performing students ask for the least help and perceive to get the least help in each of the help support components. Finally, in each help context, we investigate which categories of questions students seek help the most with, and who students rely on most for help.Our analysis is intended to help educators better understand how to support first-year students in an online course and we hope that our findings are also useful for help support planning once in-person learning resumes.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education},
pages = {105–111},
numpages = {7},
keywords = {help supports, cs2, computing education, online learning},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{06Engineer21,
author = {Engineer, Rutwa and Naeem Syeda, Ayesha and Simion, Bogdan},
title = {A Qualitative Study of Group Work and Participation Dynamics in a CS2 Active Learning Environment},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456359},
doi = {10.1145/3430665.3456359},
abstract = {Most active learning methods aim to engage students in collaborative problem-solving. While active learning and collaboration benefits are indisputable, more investigation is needed to understand student engagement in group activities. This qualitative study investigates the student perspective on group work in a CS2 inverted classroom, to better understand the learner mindset and identify potential barriers or conduits for collaborative engagement. We conducted 30-45 minute interviews with 30 participants from six sections of CS2, with five sections being scheduled in an Active Learning Classroom (ALC) and one in a traditional lecture hall, all taught in the same inverted model and using the same in-class activities. A multitude of facets of student behavior or engagement in group work and interactions with peers were identified via emergent coding. We classified emerging themes into higher-order categories which subsume semantically-related themes, forming a hierarchy with the top-level categories being Perceived Utility and Social Environment. This classification is intended to provide insight to educators seeking to better engage students in active learning via collaborative in-class activities.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {25–31},
numpages = {7},
keywords = {group work, computer science education, active learning, CS2},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

inproceedings{03Zhang21,
author = {Larry Yueli Zhang and Andrew K. Petersen and Michael Liut and Bogdan Simion and Furkan Alaca},
title = {A Multi-Course Report on the Experience of Unplanned Online Exams},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432515},
doi = {10.1145/3408877.3432515},
abstract = {We report our experience of preparing and conducting unplanned online exams in the unique half-physical, half-virtual semester of Winter 2020. The report covers four courses in a large university's computer science program, ranging from first-year to third-year. With the data generated by students taking both in-person and online exams in multiple courses, we perform analyses to evaluate the validity of the online exams (especially the unproctored ones) as an assessment of student understanding. With the fine-grained student activity data provided by the online exam platform, we are also able to investigate the patterns in student exam-taking behaviours and their correlations with student performance on the exam. In addition, we share, in detail, the tips and lessons that were learned throughout the process of designing, implementing, and hosting the online exams.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {17–23},
numpages = {7},
keywords = {student behaviour, online exams, assessment},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{01Simion20,
author = {Ayesha Naeem Syeda and Rutwa Engineer and Bogdan Simion},
title = {Analyzing the Effects of Active Learning Classrooms in CS2},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366872},
doi = {10.1145/3328778.3366872},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {93–99},
numpages = {7},
keywords = {active learning classrooms, computer science education, inverted classroom},
location = {Portland, OR, USA},
series = {SIGCSE ’20}
}

